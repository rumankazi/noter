{
  "name": "noter",
  "version": "0.1.0",
  "description": "A lightweight, fast, cross-platform note-taking app that works offline",
  "main": "dist/main/main.js",
  "homepage": "https://github.com/rumankazi/noter#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rumankazi/noter.git"
  },
  "author": "rumankazi",
  "license": "MIT",
  "private": true,
  "packageManager": "pnpm@10.18.2",
  "engines": {
    "node": ">=22.0.0"
  },
  "scripts": {
    "build": "pnpm run build:main && pnpm run build:renderer",
    "build:main": "tsc -p tsconfig.main.json",
    "build:renderer": "vite build",
    "dev": "concurrently \"pnpm run dev:main\" \"pnpm run dev:renderer\"",
    "dev:main": "tsc -p tsconfig.main.json --watch",
    "dev:renderer": "vite",
    "electron": "electron .",
    "electron:dev": "pnpm run build:main && electron . --dev",
    "start": "pnpm run build && pnpm run electron",
    "test": "pnpm run test:unit",
    "test:unit": "jest",
    "test:unit:watch": "jest --watch",
    "test:e2e": "playwright test",
    "test:docker:ubuntu": "docker-compose -f docker/docker-compose.test.yml run --rm test-ubuntu",
    "test:docker:macos": "docker-compose -f docker/docker-compose.test.yml run --rm test-macos",
    "test:docker:windows": "docker-compose -f docker/docker-compose.test.yml --profile windows run --rm test-windows",
    "test:docker:cross-platform": "docker-compose -f docker/docker-compose.test.yml run --rm test-ubuntu && docker-compose -f docker/docker-compose.test.yml run --rm test-macos",
    "test:docker:all": "docker-compose -f docker/docker-compose.test.yml up --abort-on-container-exit",
    "test:all-platforms": "bash scripts/test-all-platforms.sh",
    "test:all": "pnpm run test:unit && pnpm run build && pnpm run test:e2e",
    "lint": "eslint . --ext .ts,.tsx,.js,.jsx",
    "lint:fix": "eslint . --ext .ts,.tsx,.js,.jsx --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "prepare": "husky",
    "test:quick": "bash scripts/quick-test.sh",
    "pre-commit": "lint-staged",
    "pre-push": "pnpm run test && pnpm run test:e2e",
    "pack": "electron-builder --dir",
    "dist": "electron-builder",
    "dist:win": "electron-builder --win",
    "dist:mac": "electron-builder --mac",
    "dist:linux": "electron-builder --linux",
    "dist:all": "electron-builder --publish=never --win --mac --linux",
    "release": "semantic-release"
  },
  "devDependencies": {
    "@commitlint/cli": "^20.1.0",
    "@commitlint/config-conventional": "^20.0.0",
    "@playwright/test": "^1.56.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^20.19.21",
    "@types/react": "^18.3.12",
    "@types/react-dom": "^18.3.1",
    "@typescript-eslint/eslint-plugin": "^8.46.1",
    "@typescript-eslint/parser": "^8.46.1",
    "@vitejs/plugin-react": "^4.7.0",
    "concurrently": "^9.2.1",
    "electron": "^27.3.11",
    "electron-builder": "^24.13.3",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.2",
    "eslint-plugin-prettier": "^5.2.1",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^15.5.2",
    "prettier": "^3.4.2",
    "semantic-release": "^22.0.12",
    "ts-jest": "^29.2.5",
    "typescript": "^5.9.3",
    "vite": "^5.4.11"
  },
  "dependencies": {
    "electron-updater": "^6.1.4",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "build": {
    "appId": "com.rumankazi.noter",
    "productName": "Noter",
    "directories": {
      "output": "release"
    },
    "files": [
      "dist/**/*",
      "node_modules/**/*"
    ],
    "mac": {
      "category": "public.app-category.productivity",
      "target": [
        {
          "target": "dmg",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ]
    },
    "win": {
      "target": [
        {
          "target": "dir"
        }
      ]
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "deb",
          "arch": [
            "x64"
          ]
        }
      ]
    }
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}
