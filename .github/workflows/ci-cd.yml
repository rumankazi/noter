name: CI/CD Pipeline

on:
    push:
        branches: [main, develop, restructure]
    pull_request:
        branches: [main, develop, restructure]
    workflow_dispatch:

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [windows-latest, macos-latest, ubuntu-latest]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: latest

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: latest
                  cache: "pnpm"
                  cache-dependency-path: "pnpm-lock.yaml"

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Run linter
              run: pnpm run lint

            - name: Run unit tests
              run: pnpm run test

            - name: Build application
              run: pnpm run build

            - name: Install Playwright browsers
              run: pnpm exec playwright install

            - name: Run E2E tests
              run: pnpm run test:e2e

            - name: Upload test results
              uses: actions/upload-artifact@v4
              if: failure()
              with:
                  name: test-results-${{ matrix.os }}-${{ matrix.node-version }}
                  path: |
                      test-results/
                      playwright-report/

    build-and-package:
        needs: test
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - os: windows-latest
                      platform: win32
                    - os: macos-latest
                      platform: darwin
                    - os: ubuntu-latest
                      platform: linux

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.x
                  cache: "pnpm"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 8

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build application
              run: pnpm run build

            - name: Package application
              run: pnpm run dist
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: noter-${{ matrix.platform }}
                  path: |
                      release/*.exe
                      release/*.dmg
                      release/*.AppImage
                      release/*.deb
                  retention-days: 30

    release:
        needs: [test, build-and-package]
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.x
                  cache: "pnpm"

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 8

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: release-artifacts

            - name: Run semantic release
              run: pnpm exec semantic-release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
