name: Build and Release

on:
  push:
    branches: [main, test-release]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: latest
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test --run

      - name: Run lint
        run: pnpm lint

  build:
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test-release')
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: latest
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Package macOS application
        run: pnpm package:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Skip code signing on CI to avoid warnings
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: noter-macos
          path: |
            release/*.dmg
            release/*.zip
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          # Use PAT with write permissions for semantic-release
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: latest
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: noter-macos
          path: artifacts

      - name: Organize release files
        run: |
          mkdir -p release
          # Move macOS build artifacts to release directory
          find artifacts -type f \( -name "*.dmg" -o -name "*.zip" \) -exec mv {} release/ \;
          ls -la release/

      - name: Debug Git configuration
        run: |
          echo "Git remote URL:"
          git remote -v
          echo "Git config:"
          git config --list | grep -E "(user\.|remote\.)"
          echo "Current branch:"
          git branch -a
          echo "Git status:"
          git status

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          echo "Starting semantic-release..."
          pnpm semantic-release --debug
